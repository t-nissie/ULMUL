= ULMUL取扱説明書
ULMULは独自の軽量マークアップ言語 (Ultra Lightweight MarkUp Language) です。
文章中のTeXスタイルで書かれた数式をMathMLかMathJaxに変換できるのが特徴です。
コマンドulmul2html5でMathMLを使ったHTML5に、ulmul2mathjaxでMathJaxを使ったHTML5に変換します。
ulmul2latexでLaTeXにも変換できます。
Rubyで書かれています。ulmul.rbをライブラリとして利用することも可能です。

ホームページ: https://t-nissie.users.sourceforge.net/ULMUL/

Ruby Gem: https://rubygems.org/gems/ulmul

Gitレポジトリ: https://github.com/t-nissie/ULMUL

== 特徴
 * 文章中の２つのドル記号($)で挟まれた部分と"\Eq:foo"と"/Eq:foo"とで挟まれた行が
   数式としてTeX形式からMathML形式に変換されます。MathMLとはXMLで数式を記述
   するための規格です。込み入った規格なので人間が直接MathMLを記述する
   ことは想定されていませんが、ULMULでやっているようにTeXなどからの変換により
   生成することができます。今日ではMathMLはFirefox, Chrome, Edge, Safariなどたいていのブラウザで表示できるようです。
   MathML Library https://rubygems.org/gems/math_ml を使っています。
 * ウェブ・ブラウザ+CSS+XHTML+JavaScriptを使ったプレゼン環境
   Slidy https://www.w3.org/Talks/Tools/Slidy/ に対応したxhtmlが出力可能。
   パッケージの中の ulmul-slidy.js と ulmul-slidy.css とを使ってください。
 * 図、表、コードが挿入でき、文中でそれらの参照ができます。
 * =begin, =end はあってもなくてもかまいません。
 * 行を#ではじめるとコメントになります。
 * ulmul.rbをライブラリとしても使えます。
 * subs_rulesに俺ルールを加えることができます。
 * 目次 (Table of Contents) を自動的に生成できます。
 * はじめの「= ABCD EFGH」がタイトルになります。Slidyの表紙にもなります。
 * テキストファイルはutf-8で書きます。自然言語は--language=jaなどとオプションで指定できます。

== インストール方法
RubyGems https://rubygems.org/gems/ulmul
でインストールすれば必要なライブラリも自動的にインストールされます:
  $ sudo gem install ulmul

== ULMULテキストの書き方
ULMULテキストのエンコーディングにはutf-8を使ってください。
=== 各行の種類
ulmul.rbは状態遷移 (state machine) ライブラリaasmを使っていて、
入力の各行を「イベント」として扱っています。
==== 空行 (empty)
空行は段落を分割します。
==== ヘディング (heading)
"= ", "== ", "=== ", "==== ", "===== ", または "====== " で始めてください。
「= ABCD EFGH」ならABCD EFGHがタイトルになります。Slidyの表紙にもなります。
==== アスタリスクで始まる行は箇条書きになります (asterisk)
２文字づつインデントして、４〜５段までネストした箇条書きが可能です:
たとえば、
 # Nesting is allowed uo to 4th--5th level.
  * First
    * Second
      * Third
        * Fourth
        * more for Fourth
      second continue
      * More for third
  * More for first
は
# Nesting is allowed uo to 4th--5th level.
 * First
   * Second
     * Third
       * Fourth
       * more for Fourth
     second continue
     * More for third
 * More for first
と変換されます。
==== オフセットされて書かれた行はそのまま出力 (verbatim, pre) されます (offset)
１つスペースを置いて書き始めた行はverbatimになります。
==== 終わり (end)
EOF と "=end" が出てくると処理が終了します。
==== 無視される行 (ignore)
"#" または "=begin" で始まる行は無視されます。
==== その他の入力行 (normal)
地の文になります。

=== その他のルール
 * "=end"より後の行はすべて無視されます。
 * あなたのオリジナル・ルールを @subs_rules に加えることができます。

=== 数式の書き方
文章中の２つのドル記号($)で挟まれた部分がTeX形式からMathML形式に変換されます。
また、"\Eq:foo"と"/Eq:foo"とで挟まれた行も次の例のように処理されます。

入力:
 Mass $m$ can be converted into energy $E$ as
 \Eq:Emc2
            E=mc^2.
 /Eq:Emc2

出力:

Mass $m$ can be converted into energy $E$ as
\Eq:Emc2
           E=mc^2.
/Eq:Emc2

数式は"Eq:Einstein"のように参照します。こんなかんじEq:Emc2。

=== 図の挿入方法
「図環境」は "\Fig:foo FILENAME.jpg" で始めて "/Fig:foo" で閉じてください。
間に図のキャプションを書くことができます。
ここで "foo" は図のタグです。
"Fig:foo"で図を参照することができます。こんな具合ですFig:ruby。

入力:
 \Fig:ruby ruby.jpg
   これは図のキャプションの例です。
   Rubyのロゴを描いてみました。
   キャプションに数式を$ax^2+bx+c=0$と書くこともできます。
 /Fig:ruby

出力:
\Fig:ruby ruby.jpg
  これは図のキャプションの例です。
  Rubyのロゴを描いてみました。
  キャプションに数式を$ax^2+bx+c=0$と書くこともできます。
/Fig:ruby

=== 表の挿入方法
Table環境はまだインプリメントされていません。

=== コードの挿入方法
「コード環境」は "\Code:baz FILENAME" で始めて "/Code:baz" で閉じてください。
間にキャプションを書くことができます。
ここで "baz" はコードのタグです。
"Code:baz"で当該コードを参照することができます。こんな具合ですCode:hello。

入力:
 \Code:hello hello.c
   Ordinary hello.c.
   Can you see stdio.h?
 /Code:hello

出力:
\Code:hello hello.c
  Ordinary hello.c.
  Can you see stdio.h?
/Code:hello

== ulmul2html5の使用方法
=== 例
 $ ulmul2html5 foo.txt > foo.html
 $ ulmul2html5 -n 'Takeshi Nishimatsu' -s ulmul-slidy.css -j ulmul-slidy.js presentation.txt > presentation.html

=== コマンド・ライン・オプション
==== --help
ヘルプ情報が表示されます。
==== -s, --style
スタイルシートのファイル名を指定します。--style=style.css などがよいでしょう。
==== -n, --name
あなたの名前を指定します。著作権表示に使われます。
==== -j, --javascript
JavaScriptのファイル名を指定します。
==== -l, --language
自然言語の種類を指定します。既定値は"en"です。日本語の場合は-l jaとします。
==== -m, --max-table-of-contents
目次の深さを指定します。既定値は"3"です。
目次が必要なければ1を指定してください。

=== 実際の使用例
 * https://loto.sourceforge.net/feram/
   * ソースは https://github.com/t-nissie/feram
 * https://loto.sourceforge.net/feram/doc/film.xhtml
   * ソースは https://loto.sourceforge.net/feram/doc/film.txt
 * https://t-nissie.users.sourceforge.net/ULMUL/index.ja.html
   * ソースは https://t-nissie.users.sourceforge.net/ULMUL/README-ja （この文章）

== ulmul2mathjaxの使用方法
数式を MathJax https://www.mathjax.org/ で出力します。
 $ ulmul2mathjax --help
 $ ulmul2mathjax -s ulmul2html5.css -j https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js \
   -j 'https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=default' README-en > README-en-mathjax.html

== ulmul2latexの使用方法
 $ ulmul2latex --help
 $ ulmul2latex test.ulmul | tee test.tex
 $ latex test.tex
 $ latex test.tex
 $ dvipdfmx test.dvi
ulmul2latexはまだ発展途上です。

== 最新のソース・ツリーの入手方法
ソース・ツリーはGitHubに置いてあります。
git(1)コマンドを使って
 $ git clone https://github.com/t-nissie/ULMUL.git ulmul
と匿名でcloneできます。

== 著作権表示
Copyright © 2008,2009,2010,2011,2012,2013,2014,2015,2017,2022,2024,2025 by Takeshi Nishimatsu

ulmul.rb is distributed in the hope that
it will be useful, but WITHOUT ANY WARRANTY.
You can copy, modify and redistribute ulmul.rb,
but only under the conditions described in
the GNU General Public License (the "GPL").

W3C has copyrights for ulmul-slidy.js and ulmul-slidy.css.
Their original names were slidy.js and slidy.css, respectively.
Takeshi Nishimatsu slightly modified them.
You can download the original package, slidy.zip, from
https://www.w3.org/Talks/Tools/Slidy/ . You can find
their licenses at https://www.w3.org/Consortium/Legal/copyright-documents
and https://www.w3.org/Consortium/Legal/copyright-software .

== 作者
西松タケシ (t_nissie{at}yahoo.co.jp) https://t-nissie.users.sourceforge.net/

# Local variables:
#   mode: rd
#   compile-command: "rake index.ja.html"
# End:
